library(readxl)
library(sf)
library(geojsonsf)
library(rgdal)
# DATA FILE
maddison = data.frame(read_excel("data/mpd2020.xlsx", sheet = "Full data"))
maddison <- maddison[maddison$year>=1950,]
maddison$gdp <- maddison$gdppc * maddison$pop / 1000000
View(maddison)
countries <- st_read("data/world_countries_data.shp")
countries <- countries[,c("ISO3", "NAMEen", "NAMEfr","geometry")]
colnames(countries) <- c("id", "NAMEen", "NAMEfr","geometry")
list <- c("SSD", "SDN")
df <- data.frame(id = "SDN", NAMEen = "Sudan (former)", NAMEfr = "Soudan")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
SDN <- st_as_sf(geometry = geom, df)
countries <- countries[!countries$id %in% list,]
countries <- rbind(countries,SDN)
list <- c("SVK","CZE")
df <- data.frame(id = "CSK", NAMEen = "Czechoslovakia", NAMEfr = "Tchécoslovaquie")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
CSK <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,CSK)
list <- c("SVN","HRV","BIH","SRB", "MNE","MKD","KOS")
df <- data.frame(id = "YUG", NAMEen = "Former Yugoslavia", NAMEfr = "Ex-Yougoslavie")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
YUG <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,YUG)
list <- c("RUS","UKR","BLR","MDA","UZB","KAZ","KGZ","TJK","TKM","GEO","AZE","ARM","LTU","LVA","EST")
df <- data.frame(id = "SUN", NAMEen = "Former USSR", NAMEfr = "URSS")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
SUN <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,SUN)
# Export
geojsonio::geojson_write(countries, file = "output/countries.geojson")
write.csv(maddison, "output/maddison.csv", row.names = FALSE)
# # Tests
countries <- st_read("data/world_countries_data.shp")
countries <- countries[,c("ISO3", "NAMEen", "NAMEfr","geometry")]
colnames(countries) <- c("id", "NAMEen", "NAMEfr","geometry")
year = 1973
tmp <- maddison[maddison$year==year,]
# View(tmp)
m <- merge(x = countries, y = tmp, by.x = "id", by.y = "countrycode", all.x = TRUE, all.y = TRUE)
View(m)
plot(st_geometry(countries), col = "red", border = "black")
plot(st_geometry(mm), col = "blue", border = "blue", add=T)
library(readxl)
library(sf)
library(geojsonsf)
library(rgdal)
# DATA FILE
maddison = data.frame(read_excel("data/mpd2020.xlsx", sheet = "Full data"))
maddison <- maddison[maddison$year>=1950,]
maddison$gdp <- maddison$gdppc * maddison$pop / 1000000
# maddison[maddison$countrycode=="FRA" & maddison$year==2018,]
# Geometries
countries <- st_read("data/world_countries_data.shp")
countries <- countries[,c("ISO3", "NAMEen", "NAMEfr","geometry")]
colnames(countries) <- c("id", "NAMEen", "NAMEfr","geometry")
# Former Sudan
list <- c("SSD", "SDN")
df <- data.frame(id = "SDN", NAMEen = "Sudan (former)", NAMEfr = "Soudan")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
SDN <- st_as_sf(geometry = geom, df)
countries <- countries[!countries$id %in% list,]
countries <- rbind(countries,SDN)
# Czechoslovakia
list <- c("SVK","CZE")
df <- data.frame(id = "CSK", NAMEen = "Czechoslovakia", NAMEfr = "Tchécoslovaquie")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
CSK <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,CSK)
# Former Yugoslavia
list <- c("SVN","HRV","BIH","SRB", "MNE","MKD","KOS")
df <- data.frame(id = "YUG", NAMEen = "Former Yugoslavia", NAMEfr = "Ex-Yougoslavie")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
YUG <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,YUG)
# Former USSR
list <- c("RUS","UKR","BLR","MDA","UZB","KAZ","KGZ","TJK","TKM","GEO","AZE","ARM","LTU","LVA","EST")
df <- data.frame(id = "SUN", NAMEen = "Former USSR", NAMEfr = "URSS")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
SUN <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,SUN)
# Export
geojsonio::geojson_write(countries, file = "output/countries.geojson")
write.csv(maddison, "output/maddison.csv", row.names = FALSE)
# # Tests
countries <- st_read("data/world_countries_data.shp")
countries <- countries[,c("ISO3", "NAMEen", "NAMEfr","geometry")]
colnames(countries) <- c("id", "NAMEen", "NAMEfr","geometry")
year = 1973
tmp <- maddison[maddison$year==year,]
# View(tmp)
m <- merge(x = countries, y = tmp, by.x = "id", by.y = "countrycode", all.x = TRUE, all.y = TRUE)
View(m)
x <- as.vector(m[is.na(m$pop),"id"] %>% st_drop_geometry())
plot(st_geometry(countries), col = "red", border = "black")
plot(st_geometry(mm), col = "blue", border = "blue", add=T)
plot(st_geometry(m), col = "blue", border = "blue", add=T)
View(csv)
View(maddison)
# Export
st_write(countries, file = "output/countries.shp")
library(readxl)
library(sf)
maddison = data.frame(read_excel("data/mpd2020.xlsx", sheet = "Full data"))
maddison <- maddison[maddison$year>=1950,]
library(readxl)
library(sf)
maddison = data.frame(read_excel("data/mpd2020.xlsx", sheet = "Full data"))
maddison = data.frame(read_excel("raw/mpd2020.xlsx", sheet = "Full data"))
maddison <- maddison[maddison$year>=1950,]
maddison$gdp <- maddison$gdppc * maddison$pop / 1000000
countries <- st_read("data/world_countries_data.shp")
countries <- st_read("raw/world_countries_data.shp")
countries <- countries[,c("ISO3", "NAMEen", "NAMEfr","geometry")]
colnames(countries) <- c("id", "NAMEen", "NAMEfr","geometry")
list <- c("SSD", "SDN")
df <- data.frame(id = "SDN", NAMEen = "Sudan (former)", NAMEfr = "Soudan")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
SDN <- st_as_sf(geometry = geom, df)
countries <- countries[!countries$id %in% list,]
countries <- rbind(countries,SDN)
list <- c("SVK","CZE")
df <- data.frame(id = "CSK", NAMEen = "Czechoslovakia", NAMEfr = "Tchécoslovaquie")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
CSK <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,CSK)
list <- c("SVN","HRV","BIH","SRB", "MNE","MKD","KOS")
df <- data.frame(id = "YUG", NAMEen = "Former Yugoslavia", NAMEfr = "Ex-Yougoslavie")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
YUG <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,YUG)
list <- c("RUS","UKR","BLR","MDA","UZB","KAZ","KGZ","TJK","TKM","GEO","AZE","ARM","LTU","LVA","EST")
df <- data.frame(id = "SUN", NAMEen = "Former USSR", NAMEfr = "URSS")
geom <- st_union(st_geometry(countries[countries$id %in% list,]))
SUN <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,SUN)
---
title: "Le nouveau rideau de fer"
author: "Nicolas LAMBERT"
date: "November 8, 2019"
output:
rmdformats::readthedown
link_citations: true
---
xxxxx
## Data
Pour réaliser cette carte, nous utilisons pour cela les packages *eurostat* [@eurostat], *RnaturalEarth* [@rnaturalearth], *sf* [@sf] et *cartography* [@cartography2], [@cartography1].
## Data Handling
```{r, eval = TRUE, message = FALSE, warning = FALSE}
library("sf")
library("cartography")
library("eurostat")
library("rnaturalearth")
```
---
title: "Dots Cartograms"
author: "Lambert N. & Bahoken F."
date: "2021"
output:
rmdformats::readthedown
link_citations: true
---
xxxxx
## Data
xxx
## Data Handling
```{r, eval = TRUE, message = FALSE, warning = FALSE}
library("sf")
library("cartography")
library("eurostat")
library("rnaturalearth")
```
---
title: "Dots Cartograms"
author: "Lambert N. & Bahoken F."
date: "2021"
output:
rmdformats::readthedown
link_citations: true
---
xxxxx
## Data
xxx
## Data Handling
```{r, eval = TRUE, message = FALSE, warning = FALSE}
library("sf")
library("cartography")
library("eurostat")
library("rnaturalearth")
```
---
title: "Dots Cartograms"
author: "Lambert N. & Bahoken F."
date: "2021"
output:
rmdformats::readthedown
link_citations: true
---
Introduction
Add a picture here
## What about data?
All of the maps built in this publication are based on data from the [Maddison Project Database 2018](https://www.rug.nl/ggdc/historicaldevelopment/maddison/data/mpd2018.xlsx). Maddison Project Database, version 2018 by Jutta Bolt, Robert Inklaar, Herman de Jong and Jan Luiten van Zanden is licensed under a [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/). All the documentation is available on the [website](https://www.rug.nl/ggdc/historicaldevelopment/maddison/releases/maddison-project-database-2018?lang=en). The basemap of the world countries used here is extracted from the [Magrit](http://magrit.cnrs.fr/) project.
## Data Import & Handling
Import of the Maddison database.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
library(readxl)
maddison = data.frame(read_excel("data/mpd2020.xlsx", sheet = "Full data"))
maddison <- maddison[maddison$year>=1950,]
maddison$gdp <- maddison$gdppc * maddison$pop / 1000000
```
Import of the basemap.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
library(sf)
countries <- st_read("data/world_countries_data.shp", quiet = TRUE )
countries <- countries[,c("ISO3", "NAMEen", "NAMEfr","geometry")]
colnames(countries) <- c("id", "NAMEen", "NAMEfr","geometry")
```
Merging Former Sudan.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l <- c("SSD", "SDN")
df <- data.frame(id = "SDN", NAMEen = "Sudan (former)", NAMEfr = "Soudan")
geom <- st_union(st_geometry(countries[countries$id %in% l,]))
SDN <- st_as_sf(geometry = geom, df)
countries <- countries[!countries$id %in% l,]
countries <- rbind(countries,SDN)
```
Merging Czechoslovakia.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l <- c("SVK","CZE")
df <- data.frame(id = "CSK", NAMEen = "Czechoslovakia", NAMEfr = "Tchécoslovaquie")
geom <- st_union(st_geometry(countries[countries$id %in% l,]))
CSK <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,CSK)
```
Merging Former Yugoslavia.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l <- c("SVN","HRV","BIH","SRB", "MNE","MKD","KOS")
df <- data.frame(id = "YUG", NAMEen = "Former Yugoslavia", NAMEfr = "Ex-Yougoslavie")
geom <- st_union(st_geometry(countries[countries$id %in% l,]))
YUG <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,YUG)
```
Merging USSR.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l <- c("RUS","UKR","BLR","MDA","UZB","KAZ","KGZ","TJK",
"TKM","GEO","AZE","ARM","LTU","LVA","EST")
df <- data.frame(id = "SUN", NAMEen = "Former USSR", NAMEfr = "URSS")
geom <- st_union(st_geometry(countries[countries$id %in% l,]))
SUN <- st_as_sf(geometry = geom, df)
countries <- rbind(countries,SUN)
```
The World from 1950 to 1991.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l1 = c("SVK", "CZE", "RUS", "UKR", "BLR", "MDA", "UZB","KAZ",
"KGZ", "TJK", "TKM", "GEO", "AZE", "ARM", "LTU", "LVA",
"EST","SVN","HRV", "BIH", "SRB","MNE", "MKD", "KOS")
world1 <- countries[!countries$id %in% l1,]
```
The World in 1992.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l2 = c("CSK", "YUG","RUS", "UKR", "BLR", "MDA","UZB", "KAZ",
"KGZ", "TJK", "TKM", "GEO", "AZE", "ARM", "LTU", "LVA",
"EST")
world2 <- countries[!countries$id %in% l2,]
```
The World from 1993 to 2018.
```{r, eval = TRUE, message = FALSE, warning = FALSE}
l3 = c("CSK", "SUN", "YUG")
world3 <- countries[!countries$id %in% l3,]
```
## Map Template
```{r, eval = TRUE, message = FALSE, warning = FALSE}
file <- "maps/fig01_template.png"
if (!file.exists(file)){
w <- world3
png(file, width = 1500, height = 500, res = 150)
par(mar = c(0,0,0,0), bg="#A8D4EF")
plot(st_geometry(w), col = "#C8D8E5", border = NA)
# plot(st_geometry(w) + c(1500, -1500), col ="#00000010", border = NA, add = T)
# plot(st_geometry(w) + c(3000, -3000), col ="#00000010", border = NA, add = T)
# plot(st_geometry(w) + c(4500, -4500), col ="#00000010", border = NA, add = T)
# plot(st_geometry(w) + c(6000, -6000), col ="#00000010", border = NA, add = T)
# plot(st_geometry(w) + c(7500, -7500), col ="#00000010", border = NA, add = T)
# plot(st_geometry(w), col = "#e0d580", border = "#C8D8E5", lwd = 0.4, add = T)
# plot(st_geometry(w), col = "#E0D4C6", border = "#C8D8E5", lwd = 0.4, add = T)
dev.off()
}
```
file <- "maps/fig01_template.png"
if (!file.exists(file)){
w <- world3
png(file, width = 1500, height = 800, res = 150)
par(mar = c(0,0,0,0), bg="#CCCCCC")
plot(st_geometry(graticule), col = "blue", border = "white", lwd = 1)
plot(st_geometry(w), col = "yellow", border = NA, add= T)
plot(st_geometry(sphere), col = NA, border = "black", lwd = 1, add = T)
dev.off()
}
