class(cartog)
head(cartog)
artog[!cartog$name %in% c("IS","MT")]
cartog[!cartog$name %in% c("IS","MT")]
cartog[,!cartog$name %in% c("IS","MT")]
cartog[!cartog$name %in% c("IS","MT"),]
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
View(communes)
var = "pop2018"
onedot = 1
radius = 1
col = "red"
var = "pop2018"
onedot = 1
radius = 1
col = "red"
x = communes
var = "pop2018"
onedot = 1
radius = 1
col = "red"
x <- x[,c("id",var,"geometry")]
x[,"v"] <- round(x[,var] %>% st_drop_geometry() /onedot,0)
dots <- st_sample(x, x$v, type = "random", exact = TRUE)
x = communes
var = "pop2018"
onedot = 10000
radius = 1
col = "red"
x <- x[,c("id",var,"geometry")]
x[,"v"] <- round(x[,var] %>% st_drop_geometry() /onedot,0)
dots <- st_sample(x, x$v, type = "random", exact = TRUE)
summary(communes$pop2018)
x = communes
var = "pop2018"
onedot = 100
radius = 1
col = "red"
x <- x[,c("id",var,"geometry")]
x[,"v"] <- round(x[,var] %>% st_drop_geometry() /onedot,0)
dots <- st_sample(x, x$v, type = "random", exact = TRUE)
dotdensitymap <- function(x, var, onedot = 1, radius = 1){
x <- x[,c("id",var,"geometry")]
x[,"v"] <- round(x[,var] %>% st_drop_geometry() /onedot,0)
dots <- st_sample(x, x$v, type = "random", exact = TRUE)
circles <- st_buffer(dots, dist = radius)
return (circles)
}
dots = dotdensitymap(x = communes, var = "pop2018", onedot = 500, radius = 1)
View(dots)
plot(dots)
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
st_geometry(x) <- st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE)
plots(st_geometry(x))
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
plot(st_geometry(x))
st_geometry(x) <- st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE)
plot(st_geometry(x))
x$v <- round(x$v/onedot,0)
x$v <- round(x[var]/onedot,0)
x[var]
x[var,1]
x[var]
data.frame(x[var])
data.frame(x[var])[1,]
data.frame(x[var])[,1]
(x[var])[,1]
x[var][,1]
x$v <- round(data.frame(x[var])[,1]/onedot,0)
x <- x[x$v > 0,]
View(x)
dots <- x[x$v == 1,c("x","y","v")]
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
coords
x <- data.frame(x$id, x[var], coords)
View(x)
x$v <- x[var]/onedot,0)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords)
x$v <- round(x[var]/onedot,0)
View(x)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords)
class(x)
x$v <- round(x[var]/onedot,0)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords)
x$v <- round(x[var]/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords)
x$v <- round(x[var]/onedot,0)
View(x)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
View(coords)
x <- data.frame(x$id, x[var], coords)
View(x)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords)
View(x)
x <- data.frame(x$id, x[var], coords) %>% st_drop_geometry()
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x$id, x[var], coords) %>% st_drop_geometry()
x <- data.frame(x$id, x[var], coords)
View(x)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
x
x <- x[c("id",var)] %>% st_drop_geometry()
View(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x, coords)
View(x)
View(x)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
x <- x[c("id",var)] %>% st_drop_geometry()
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
x <- x[c("id",var)] %>% st_drop_geometry()
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
View(x)
x$v <- round(x$v/onedot,0)
View(x)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
library(packcircles)
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = sf::st_crs(sphere)), dist = radius)
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = sf::st_crs(communes)), dist = radius)
library(packcircles)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 10
onedot = 1000
radius = 1000
crs = sf::st_crs(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
x$v <- round(x$v/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = crs), dist = radius)
View(circles)
plots(st_geometry(circles))
plot(st_geometry(circles))
library(packcircles)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 50
onedot = 1000
radius = 500
crs = sf::st_crs(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
x$v <- round(x$v/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = crs), dist = radius)
plot(st_geometry(circles))
library(packcircles)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 100
onedot = 1000
radius = 500
crs = sf::st_crs(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
x$v <- round(x$v/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = crs), dist = radius)
plot(st_geometry(circles))
library(packcircles)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 120
onedot = 1000
radius = 750
crs = sf::st_crs(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
x$v <- round(x$v/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = crs), dist = radius)
plot(st_geometry(circles))
library(packcircles)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
x = communes
var = "pop2018"
itermax = 120
onedot = 1000
radius = 600
crs = sf::st_crs(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
x$v <- round(x$v/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = crs), dist = radius)
plot(st_geometry(circles))
library(packcircles)
#Dots cartograms
communes <- st_read("data/isere.geojson", quiet = TRUE ) %>% st_transform(2154)
data <- read.csv("data/popisrere.csv",  dec = ",")
communes = merge(x = communes[,c("id","name","geometry")],
y = data[,c("id", "pop2018","agri", "art", "cadr", "interm", "emp","ouvr","retr")],
by = "id")
dotcartogram = function(x,var,itermax,onedot,radius){
crs = sf::st_crs(x)
coords <- st_coordinates(st_centroid(sf::st_geometry(x),of_largest_polygon = TRUE))
x <- x[c("id",var)] %>% st_drop_geometry()
x <- data.frame(x, coords)
colnames(x) <- c("id","v","x","y")
x$v <- round(x$v/onedot,0)
x <- x[x$v > 0,]
dots <- x[x$v == 1,c("x","y","v")]
rest <-  x[x$v  > 1,c("x","y","v")]
nb <- nrow(rest)
for (i in 1:nb){
new <- rest[i,]
new$v <- 1
for (j in 1:rest$v[i]){ dots <- rbind(dots,new)}
}
dots$x <- jitter(dots$x)
dots$y <- jitter(dots$y)
dots$v <- radius
simulation <- circleRepelLayout(x = dots, xysizecols = 1:3,
wrap = FALSE, sizetype = "radius",
maxiter = itermax, weights =1)$layout
circles <- st_buffer(sf::st_as_sf(simulation, coords =c('x', 'y'),
crs = crs), dist = radius)
return(circles)
}
dc = dotcartogram(x = communes, var = "pop2018", itermax = 120,
onedot = 1000, radius = 600)
plot(st_geometry(dc))
